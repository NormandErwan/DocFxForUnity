name: Example documentation with Unity action

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Activate license
        uses: MirrorNG/unity-runner@3.1.0
        with:
          entrypoint: /activate.sh

      - name: Generate .csproj files
        uses: MirrorNG/unity-runner@3.1.0
        with:
          args: -batchmode -nographics -quit -projectPath . -logFile - -executeMethod UnityEditor.SyncVS.SyncSolution

      - name: Setup DocFX
        run: |
          wget https://github.com/dotnet/docfx/releases/download/v2.56.6/docfx.zip
          unzip docfx -d docfx

      - name: Use README.md as index.md
        run: cp README.md Documentation/index.md

      - name: Build
        uses: docker://mono:latest
        with:
          args: docfx Documentation/docfx.json

      - name: Display files
        run: ls -R

      - name: Upload csproj artifact
        uses: actions/upload-artifact@v2
        with:
          name: csproj
          path: ./*.csproj

      - name: Upload site artifact
        uses: actions/upload-artifact@v2
        with:
          name: _site
          path: _site